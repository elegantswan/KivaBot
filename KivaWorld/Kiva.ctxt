#BlueJ class context
comment0.target=Kiva
comment0.text=\n\ This\ is\ the\ main\ Kiva\ class\ that\ instantiates\ a\ Kiva\n\ robot\ and\ moves\ the\ object\ around\ a\ map\ given\ user\ input.\ \n\ @author\ Kevin\ Phan\n\ @version\ 4/5/21\n
comment1.params=
comment1.target=boolean\ isSuccessfullyDropped()
comment1.text=\n\ Returns\ state\ of\ whether\ dropped\ or\ not.\n\ @return\ isSucessfullyDropped\ boolean.\n
comment10.params=
comment10.target=void\ incrementMotorLifetime()
comment10.text=\n\ Increments\ motorLifetime\ by\ 1000\ seconds\ everytime\ Kiva\ robot\n\ moves\ forward,\ turns\ left,\ or\ turns\ right.\n\ @return\ motorLifetime\ +\ 1000\n
comment11.params=command
comment11.target=void\ move(KivaCommand)
comment11.text=\n\ Moves\ Kiva\ object's\ location\ based\ on\ KivaCommand\ passed\ in.\n\ @param\ User\ inputs\ KivaCommand\ that\ dicates\ direction\ Kiva\ object\ will\ move.\n
comment12.params=
comment12.target=void\ moveForward()
comment12.text=\n\ Moves\ Kiva\ forward\ depending\ on\ what\ direction\ object\ is\ facing.\n\ @return\ Updates\ currentLocation\ by\ iterating\ x\ or\ y\ value\ by\ 1.\n
comment13.params=
comment13.target=void\ turnRight()
comment13.text=\n\ Turns\ Kiva\ object\ 90\ degrees\ to\ the\ right.\n\ @return\ Changes\ directionFacing.\n
comment14.params=
comment14.target=void\ turnLeft()
comment14.text=\n\ Turns\ Kiva\ object\ 90\ degrees\ to\ the\ left.\n\ @return\ Changes\ directionFacing.\n
comment2.params=
comment2.target=boolean\ isCarryingPod()
comment2.text=\n\ Returns\ state\ of\ whether\ carrying\ pod\ or\ not.\n\ @return\ isCarryingPod\ boolean.\n
comment3.params=
comment3.target=long\ getMotorLifetime()
comment3.text=\n\ Gets\ total\ number\ of\ seconds\ Kiva\ has\ incurred.\n\ @return\ Time\ Kiva\ has\ incurred\ in\ seconds.\n
comment4.params=
comment4.target=FacingDirection\ getDirectionFacing()
comment4.text=\ \n\ Returns\ most\ current\ direction\ Kiva\ is\ assigned\ to.\n\ @return\ This\ should\ be\ type\ FacingDirection.\n
comment5.params=
comment5.target=edu.duke.Point\ getCurrentLocation()
comment5.text=\n\ Returns\ current\ location\ of\ Kiva\ object\ on\ map.\n\ @return\ Current\ location\ on\ map.\ \n
comment6.params=x\ y
comment6.target=void\ setCurrentLocation(int,\ int)
comment6.text=\n\ Updates\ currentLocation\ by\ receiving\ incremented\ x\ and\ y\ \n\ value\ in\ correspondence\ with\ move()\ method.\n\ @param\ int\ x\ and\ y\ coordinates\ that\ provide\ new\ location.\n\ \ \ \ \ \ \ \ \ \ \ \ \n
comment7.params=x\ y
comment7.target=void\ podExceptionTester(int,\ int)
comment7.text=\n\ Modified\ currentLocation\ value\ by\ receiving\ incremented\ x\ and\ y\n\ value\ of\ upcoming\ location\ to\ conduct\ exception\ test\ before\ \n\ currentLocation\ value\ is\ updated.\n\ @param\ int\ x\ and\ y\ coordinates\ that\ provide\ where\ pod\ should\ be\ in\ next\ move.\n
comment8.params=map
comment8.target=Kiva(FloorMap)
comment8.text=\n\ Initializes\ new\ Kiva\ robot\ and\ sets\ currentLocation\ to\ \n\ initialLocation\ set\ on\ map\ passed\ in\ constructor.\n\ @param\ map\ Map\ set\ by\ value\ passed\ in\ parameter\ that\ robot\ will\ naviagete\ on.\n
comment9.params=map\ currentLocation
comment9.target=Kiva(FloorMap,\ edu.duke.Point)
comment9.text=\n\ Initializes\ new\ Kiva\ robot\ and\ sets\ location\ to\ \n\ currentLocation\ value\ passed\ in\ constructor.\n\ @param\ map\ Map\ set\ by\ value\ passed\ in\ parameter\ that\ robot\ will\ naviagete\ on.\n\ @param\ currentLocation\ Starting\ location\ set\ to\ value\ passed\ in\ parameter.\ \n
numComments=15
